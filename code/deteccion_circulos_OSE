#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Jul 14 18:04:50 2018

CÃ³digo de referencia
http://intelirobot.com.mx/blog/proyecto-ophelia-robot-humanoide/ball-tracking-deteccion-de-balones-opencv-python/

@author: nicolas
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt
plt.rcParams['image.cmap'] = 'gray'
#%%
maxCirculos=3
#%% Carga de archivos

filename = '../images/OSE/ose17b.jpg'
img = cv2.imread(filename)
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

plt.figure(); plt.imshow(gray)

#%% Aplico filtros gaussiano y de mediana
gray = cv2.GaussianBlur(gray, (1,1), 2)
gray = cv2.medianBlur(gray,5)

plt.figure(); plt.imshow(gray)

#%% Aplico threshold adaptativo
img_bin = cv2.adaptiveThreshold(gray,255,cv2.ADAPTIVE_THRESH_GAUSSIAN_C,cv2.THRESH_BINARY,19,3)
plt.figure(); plt.imshow(img_bin)

#%% Aplico trasformaciones morfologicas
kernel = np.ones((3,3))
#img_fin = cv2.erode(gray,kernel,iterations = 1) 
img_fin = cv2.morphologyEx(img_bin, cv2.MORPH_DILATE, kernel) 
plt.figure(); plt.imshow(img_fin)

#%%

circles = cv2.HoughCircles(img_fin, cv2.HOUGH_GRADIENT, 2, 10, np.array([]), 40, 80, 5, 100)
circulos=0
if circles is not None:
  for c in circles[0]:
     cv2.circle(img, (c[0],c[1]), c[2], (0,255,0),2)
     circulos=circulos+1
     if(circulos>maxCirculos):
        break

plt.figure(); plt.imshow(img)